// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package service

import (
	"context"

	"github.com/houseme/url-shortenter/app/console/internal/model"
)

type IDomain interface {
	CreateDomainAuthorization(ctx context.Context, in *model.DomainAuthorizationInput) (out *model.DomainAuthorizationOutput, err error)
	QueryDomainAuthorization(ctx context.Context, in *model.QueryDomainAuthorizationInput) (out *model.QueryDomainAuthorizationOutput, err error)
	UpdateDomainAuthorization(ctx context.Context, in *model.DomainAuthorizationUpdateInput) (out *model.DomainAuthorizationUpdateOutput, err error)
	DeleteDomainAuthorization(ctx context.Context, in *model.DomainAuthorizationDeleteInput) (out *model.DomainAuthorizationDeleteOutput, err error)
	DomainAuthorizationDetail(ctx context.Context, in *model.DomainAuthorizationDetailInput) (out *model.DomainAuthorizationDetailOutput, err error)
	DomainAuthorizationList(ctx context.Context, in *model.DomainAuthorizationListInput) (out *model.DomainAuthorizationListOutput, err error)
}

var localDomain IDomain

func Domain() IDomain {
	if localDomain == nil {
		panic("implement not found for interface IDomain, forgot register?")
	}
	return localDomain
}

func RegisterDomain(i IDomain) {
	localDomain = i
}
